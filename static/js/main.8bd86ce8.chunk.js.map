{"version":3,"sources":["Calculator.js","config/firebase.js","Chevron.js","SampleForm.js","ExpenseForm.js","Expenses.js","Budget.js","SpendingLog.js","LineGraph.js","Converter.js","homepage.js","SpendingCalc.js","Home.js","Navbar.js","Profile.js","Main.js","Signup.js","Login.js","App.js","serviceWorker.js","index.js"],"names":["Calculator","props","state","mathString","appendNumber","bind","appendOperator","remove","clear","calc","className","CalculatorScreen","text","this","CalculatorButton","elem","cols","mathFunc","number","setState","op","lastChar","charAt","length","isNaN","slice","ans","eval","Infinity","e","SyntaxError","window","alert","Component","btClassName","onClick","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","firestore","Chevron","React","ExpenseForm","handleChange","prop","event","target","value","name","amount","category","date","NewExpenseForm","ExpenseFormDialog","createExpense","classes","makeStyles","theme","root","display","flexWrap","margin","spacing","withoutLabel","marginTop","textField","width","menu","useStyles","FormControl","InputLabel","htmlFor","Input","id","onChange","type","step","min","max","startAdornment","InputAdornment","position","TextField","select","label","SelectProps","native","MenuProps","map","option","key","placeholder","InputLabelProps","shrink","fab","useState","open","setOpen","handleClose","Fab","color","aria-label","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","DialogActions","Button","purchase","userRef","collection","doc","fire","auth","currentUser","email","console","log","monthField","substring","update","expenses","FieldValue","arrayUnion","then","catch","error","set","merge","Expenses","found","UserExpenseTable","ExampleExpenseTable","Accordion","currentComp","onAuthStateChanged","user","onSnapshot","includeMetadataChanges","undefined","data","table","heading","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","Typography","style","justifyContent","alignItems","ExpansionPanelDetails","overflowX","minWidth","examples","push","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","index","component","scope","withRouter","Budget","updateInput","setBudget","preventDefault","budget","display_budget","budget_copy","get","querySnapshot","forEach","onSubmit","class","required","keyCode","which","keyValue","String","fromCharCode","test","onKeyPress","fourSpent","threeSpent","twoSpent","oneSpent","currSpent","LineGraph","currDate","Date","lastWeek","setDate","getDate","twoWeeks","threeWeeks","fourWeeks","handleChangeSelect","currMonth","monthList","indexOf","setLineGraphData","setDoughnutGraphData","splitByMonth","i","currMonthCat","substr","monthCat","selectColor","colorInd","monthInd","tempMonthCat","arrSpent","arrDate","parseFloat","rawDate","sameDate","toPrecision","graphData","labels","datasets","arrCategory","arrColor","currCategory","sameCategory","currColor","backgroundColor","pastInput","decimal","currMonthIndex","getUTCMonth","getUTCDate","borderColor","Select","labelId","MenuItem","height","options","responsive","title","legend","layout","padding","left","right","top","bottom","maintainAspectRatio","Converter","prettyCurrency","crr","action","fixedCrr","toFixed","toString","createTable","rates","ratesArr","Object","keys","children","displayedCurrencies","hasOwnProperty","includes","isLoaded","fetch","res","json","result","message","href","Homepage","focus","ReactDOM","render","document","getElementById","totalcalc","totalmonths","Home","appBar","marginLeft","drawer","flexShrink","drawerPaper","toolbar","mixins","content","flexGrow","palette","background","default","testing","logout","signOut","SpendingCalc","handleAMChange","amountneed","validateAM","handleCSChange","currentsave","validateCS","handleYRChange","yearstosave","validateYR","handleMOChange","monthstosave","validateMO","amError","csError","yrError","moError","handleSubmit","Number","Math","ceil","onBlur","Profile","_isMounted","updateInfo","bio","icon","group","validate","success","disabled","Main","exact","path","SignUp","signup","password","createUserWithEmailAndPassword","u","md","Login","login","recaptchaLoaded","verifyCallback","showsignup","isVerified","response","signInWithEmailAndPassword","sitekey","onloadCallback","App","authListener","localStorage","setItem","uid","removeItem","fixedHeader","to","logo","Boolean","location","hostname","match","createElement","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8bd86ce8.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Link } from \"react-router-dom\";\nimport './Calculator.css';\nimport {\n  MDBContainer,\n  MDBRow,\n  MDBCol,\n  MDBInput,\n  MDBBtn,\n  MDBCard,\n  MDBCardBody\n} from \"mdbreact\";\n\n\nclass Calculator extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            /* The equation string in calculator display */\n            mathString: \"\"\n        };\n        this.appendNumber = this.appendNumber.bind(this);\n        this.appendOperator = this.appendOperator.bind(this);\n        this.remove = this.remove.bind(this);\n        this.clear = this.clear.bind(this);\n        this.calc = this.calc.bind(this);\n    }\n    render(){\n        return(\n            <div>\n                <MDBContainer>\n          <MDBCard>\n            <MDBCardBody>\n                <h3>Calculator</h3>\n                <main className=\"mt-5\">\n                    <div className=\"row\">\n                        <CalculatorScreen text={this.state.mathString} />\n                    </div>\n                    <div className=\"row\">\n                        <CalculatorButton elem=\"/\" cols=\"2\" mathFunc ={this.appendOperator}/>\n                        <CalculatorButton elem=\"*\" cols=\"2\" mathFunc ={this.appendOperator}/>\n                        <CalculatorButton elem=\"+\" cols=\"2\" mathFunc ={this.appendOperator}/>\n                        <CalculatorButton elem=\"-\" cols=\"2\" mathFunc ={this.appendOperator}/>\n                    </div>\n                    <div className=\"row\">\n                        <CalculatorButton elem=\"7\" cols=\"2\" mathFunc ={this.appendNumber}/>\n                        <CalculatorButton elem=\"8\" cols=\"2\" mathFunc ={this.appendNumber}/>\n                        <CalculatorButton elem=\"9\" cols=\"2\" mathFunc ={this.appendNumber}/>\n                        <CalculatorButton elem=\"⌫\" cols=\"2\" mathFunc={this.remove}/>\n                    </div>\n                    <div className=\"row\">\n                        <CalculatorButton elem=\"4\" cols=\"2\" mathFunc ={this.appendNumber}/>\n                        <CalculatorButton elem=\"5\" cols=\"2\" mathFunc ={this.appendNumber}/>\n                        <CalculatorButton elem=\"6\" cols=\"2\" mathFunc ={this.appendNumber}/>\n                        <CalculatorButton elem=\"C\" cols=\"2\" mathFunc={this.clear}/>\n                    </div>\n\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t<CalculatorButton elem=\"1\" cols=\"2\" mathFunc ={this.appendNumber}/>\n\t\t\t\t\t\t<CalculatorButton elem=\"2\" cols=\"2\" mathFunc ={this.appendNumber}/>\n\t\t\t\t\t\t<CalculatorButton elem=\"3\" cols=\"2\" mathFunc ={this.appendNumber}/>\n\t\t\t\t\t\t<CalculatorButton elem=\"=\" cols=\"2\" mathFunc={this.calc}/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t<CalculatorButton elem=\"0\" cols=\"2\" mathFunc ={this.appendNumber}/>\n\t\t\t\t\t\t<CalculatorButton elem=\".\" cols=\"2\" mathFunc ={this.appendOperator}/>\n\t\t\t\t\t\t<CalculatorButton elem=\"%\" cols=\"2\" mathFunc ={this.appendOperator}/>\n\t\t\t\t\t</div>\n                </main>\n                </MDBCardBody>\n                </MDBCard>\n                </MDBContainer>\n            </div>\n        );\n    }\n    appendNumber(number){\n        /**\n         * Append number value to math string equation.\n         * @param {Number} number\n         */\n        this.setState({mathString: this.state.mathString + number});\n    }\n    appendOperator(op){\n        /**\n         * Append operator to math string equation.\n         * @param {String} op\n         */\n        let lastChar = this.state.mathString.charAt(this.state.mathString.length -1);\n        if (isNaN(lastChar)){\n            this.setState({mathString: this.state.mathString.slice(0, this.state.mathString.length - 1) + op});\n        }\n        else{\n            this.setState({mathString:  this.state.mathString + op});\n        }\n    }\n    remove(){\n        /**\n         * Remove last charecter from math string equation.\n         */\n        this.setState({mathString:  this.state.mathString.slice(0, this.state.mathString.length - 1)});\n    }\n    clear(){\n        /**\n         * Delete math string equation.\n         */\n        this.setState({mathString:  \"\"});\n    }\n    calc(){\n        /**\n         * Calculate math string equation.\n         */\n        try {\n            let ans = eval(this.state.mathString);\n            if(isNaN(ans) || ans==Infinity){\n                ans = \"\";\n            }\n            this.setState({mathString:  \"\" + ans});\n        } catch (e) {\n            if (e instanceof SyntaxError) {\n                window.alert(\"Incorrect equation\")\n                this.setState({mathString:  \"\"});\n            }\n        }\n    }\n}\n\n\n/**\n * A component that renders a Calculator Screen.\n */\nclass CalculatorScreen extends Component{\n    constructor(props){\n        super(props);\n    }\n    render(){\n        return(\n            <div className=\"col-12 text-left bg-info border border-default d-block p-3\">\n                {this.props.text!=\"\" ? <p className=\"overflow-auto\">{this.props.text}</p> : <p>0</p>}\n            </div>\n        );\n    }\n}\n\n\n/**\n * A component that renders a Calculator Button.\n */\nclass CalculatorButton extends Component{\n    constructor(props){\n        super(props);\n        this.mathFunc = this.mathFunc.bind(this);\n    }\n    render(){\n        let btClassName =\"col-\" + this.props.cols;\n        return(\n            <button className={btClassName + \" font-weight-bold btn btn-primary border border-default\"} onClick={this.mathFunc}>{this.props.elem}</button>\n        );\n    }\n    mathFunc(){\n        /**\n         * Call parents right math method given to child.\n         */\n        this.props.mathFunc(this.props.elem);\n    }\n}\n\n\n/**\n * A component that renders footer for page, includes author name and github link.\n\nclass PageFooter extends Component{\n    constructor(props){\n        super(props);\n    }\n    render(){\n        return (\n            <footer className=\"col-12 mt-5 text-center\">\n                <p className=\"d-inline-block\"> <strong>©</strong> Leor Ariel Rose </p>\n                <a href=\"https://github.com/leorrose\" target=\"_blank\">\n                    <img className=\"github-logo align-middle ml-3 d-inline-block\" src=\"resources/githubLogo.png\" alt=\"git Hub Profile\" ></img>\n                </a>\n            </footer>\n        );\n    }\n}\n*/\nexport default Calculator;\n","import firebase from 'firebase';\n\n  // Your web app's Firebase configuration\n\n  // ORIGINAL PIGGY BANK DATABASE (use when storage is not full)\n   var firebaseConfig = {\n     apiKey: \"AIzaSyDm-9VzoXGLZji26XDghH9gx_n52rgmsHY\",\n     authDomain: \"piggy-bank-71144.firebaseapp.com\",\n     databaseURL: \"https://piggy-bank-71144.firebaseio.com\",\n     projectId: \"piggy-bank-71144\",\n     storageBucket: \"piggy-bank-71144.appspot.com\",\n     messagingSenderId: \"677504131374\",\n     appId: \"1:677504131374:web:7d80a2b5b5a3b094ed5abf\"\n   };\n\n\n\n   // BACKUP PIGGY DATABASE\n\n   /*var firebaseConfig = {\n     apiKey: \"AIzaSyBNGQ94b3sh_CA0Xud_2RKTDZcrmCSV1aQ\",\n     authDomain: \"piggy-backup.firebaseapp.com\",\n     databaseURL: \"https://piggy-backup.firebaseio.com\",\n     projectId: \"piggy-backup\",\n     storageBucket: \"piggy-backup.appspot.com\",\n     messagingSenderId: \"314565949487\",\n     appId: \"1:314565949487:web:e5b4472d9b1da8b367aeda\",\n     measurementId: \"G-VDJS8GGM8B\"\n   };*/\n\n  //  //BACKUP PIGGY DATABASE 2\n\n  /*var firebaseConfig = {\n     apiKey: \"AIzaSyB-3c-A7D9wL760suIlG1rpuaoHyCMnkcA\",\n     authDomain: \"piggybankbackup2.firebaseapp.com\",\n     databaseURL: \"https://piggybankbackup2.firebaseio.com\",\n     projectId: \"piggybankbackup2\",\n     storageBucket: \"piggybankbackup2.appspot.com\",\n     messagingSenderId: \"735217764135\",\n     appId: \"1:735217764135:web:70c868ce0316074a32cb02\",\n     measurementId: \"G-HZCM51BE1D\"\n   };*/\n\n  //BACKUP PIGGY 3\n\n   var firebaseConfig = {\n     apiKey: \"AIzaSyBcdCvaA4MwFmUTjUcuPdsbqvCt-bNTJXw\",\n     authDomain: \"piggy-back3.firebaseapp.com\",\n     databaseURL: \"https://piggy-back3.firebaseio.com\",\n     projectId: \"piggy-back3\",\n     storageBucket: \"piggy-back3.appspot.com\",\n     messagingSenderId: \"875501784070\",\n     appId: \"1:875501784070:web:f4819338804975fc678787\"\n   };\n\n  //  var firebaseConfig = {\n  //    apiKey: \"AIzaSyBcdCvaA4MwFmUTjUcuPdsbqvCt-bNTJXw\",\n  //    authDomain: \"piggy-back3.firebaseapp.com\",\n  //    databaseURL: \"https://piggy-back3.firebaseio.com\",\n  //    projectId: \"piggy-back3\",\n  //    storageBucket: \"piggy-back3.appspot.com\",\n  //    messagingSenderId: \"875501784070\",\n  //    appId: \"1:875501784070:web:f4819338804975fc678787\"\n  //  };\n\n  //BACKUP PIGGY 4\n  // var firebaseConfig = {\n  //   apiKey: \"AIzaSyBYex1zr2ofgcb-URB1jLEELCZmhpPSIx8\",\n  //   authDomain: \"piggybankbackup4.firebaseapp.com\",\n  //   databaseURL: \"https://piggybankbackup4.firebaseio.com\",\n  //   projectId: \"piggybankbackup4\",\n  //   storageBucket: \"piggybankbackup4.appspot.com\",\n  //   messagingSenderId: \"678932646779\",\n  //   appId: \"1:678932646779:web:7fd798f64138e0db63cbde\"\n  // };\n\n  //BACKUP PIGGY 5\n\n  /*\n  var firebaseConfig = {\n    apiKey: \"AIzaSyD3P-Q1xAbQTYTPkD4mYnHDdEjl6dv2k1I\",\n    authDomain: \"piggybankbackup5.firebaseapp.com\",\n    databaseURL: \"https://piggybankbackup5.firebaseio.com\",\n    projectId: \"piggybankbackup5\",\n    storageBucket: \"piggybankbackup5.appspot.com\",\n    messagingSenderId: \"364062625328\",\n    appId: \"1:364062625328:web:1fab3cbafa6cd01d2067f5\"\n  };*/\n\n  // var firebaseConfig = {\n  //   apiKey: \"AIzaSyD3P-Q1xAbQTYTPkD4mYnHDdEjl6dv2k1I\",\n  //   authDomain: \"piggybankbackup5.firebaseapp.com\",\n  //   databaseURL: \"https://piggybankbackup5.firebaseio.com\",\n  //   projectId: \"piggybankbackup5\",\n  //   storageBucket: \"piggybankbackup5.appspot.com\",\n  //   messagingSenderId: \"364062625328\",\n  //   appId: \"1:364062625328:web:1fab3cbafa6cd01d2067f5\"\n  // };\n\n\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n  // this.db = firebase.firestore();\nconst db = firebase.firestore();\n\nexport { db };\n\n  // export default db;\n  // export { db };\n\nexport default firebase;\n","import React from \"react\";\r\n\r\nfunction Chevron(props) {\r\n\r\n return (\r\n   <svg\r\n     className={props.className}\r\n     height={props.height}\r\n     width={props.width}\r\n     stroke={props.stroke}\r\n     stroke-width={props.weight}\r\n     viewBox=\"0 0 320 512\"\r\n     xmlns=\"http://www.w3.org/2000/svg\"\r\n   >\r\n     <path\r\n       d=\"m258.476 235.971-194.344 194.343c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901l154.021-154.746-154.021-154.745c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0l194.343 194.343c9.373 9.372 9.373 24.568.001 33.941z\"\r\n       fill={props.fill}\r\n     />\r\n   </svg>\r\n );\r\n}\r\n\r\nexport default Chevron;","import React from \"react\";\r\nimport { NotificationManager } from \"react-notifications\";\r\nimport { db } from \"./config/firebase\";\r\nimport fire from './config/firebase';\r\n// import ''\r\n\r\nclass SampleForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      // user: this.props.user,\r\n      formValues: {\r\n        name: \"\",\r\n        role: \"\",\r\n        cats: [],\r\n        spending: [],\r\n        dates: []\r\n\r\n      },\r\n      formErrors: {\r\n        name: \"\",\r\n        role: \"\"\r\n      },\r\n      formValidity: {\r\n        name: false,\r\n        role: false\r\n      },\r\n      isSubmitting: false,\r\n      docExists: false\r\n    };\r\n    //this.addUser = this.addUser.bind(this);\r\n    //  this.authListener = this.authListener.bind(this);\r\n  }\r\n\r\n  // componentDidMount() {\r\n  //   this.authListener();\r\n  // }\r\n\r\n  // authListener() {\r\n  //   fire.auth().onAuthStateChanged(user => {\r\n  //     console.log(user);\r\n  //     if (user) {\r\n  //       this.setState({ user });\r\n  //       localStorage.setItem(\"user\", user.uid);\r\n  //     } else {\r\n  //       this.setState({ user: null });\r\n  //       localStorage.removeItem(\"user\");\r\n  //     }\r\n  //   });\r\n  // }\r\n\r\n  getFormattedDate(date){\r\n    var year = date.getFullYear();\r\n\r\n    var month = (1 + date.getMonth()).toString();\r\n    month = month.length > 1 ? month : '0' + month;\r\n\r\n    var day = date.getDate().toString();\r\n    day = day.length > 1 ? day : '0' + day;\r\n\r\n    return month + '/' + day + '/' + year;\r\n  }\r\n\r\n  addUser = () => {\r\n    const user = fire.auth().currentUser.email;\r\n    const tempname = this.state.formValues.name;\r\n    const temprole = this.state.formValues.role;\r\n    const tempDate = this.getFormattedDate(new Date());\r\n    const data = {\r\n      ...this.state.formValues,\r\n      spending: [temprole],\r\n      dates: [tempDate]\r\n    };\r\n\r\n    let userRef = db.collection(\"sample_data\").doc(user);\r\n\r\n    console.log(tempname);\r\n    userRef.update({\r\n      name: tempname,\r\n      role: temprole,\r\n      cats: fire.firestore.FieldValue.arrayUnion(tempname),\r\n      spending: fire.firestore.FieldValue.arrayUnion(temprole),\r\n      dates: fire.firestore.FieldValue.arrayUnion(tempDate)\r\n    })\r\n    .then(function(){\r\n      console.log(\"User data added to doc\");\r\n    })\r\n    .catch(function(error) {\r\n      console.log(\"Error getting document:\", error )\r\n      userRef.set(data)\r\n      .then(function(){\r\n      })\r\n      .catch(function(error){\r\n        console.log(\"There is something really going wrong\", error);\r\n      })\r\n    });\r\n\r\n    /*userRef.get().then(function(doc,tempName) {\r\n        if (doc.exists) {\r\n            console.log(\"User data added to doc\");\r\n            console.log(tempName);\r\n            doc.update({\r\n              cats: fire.firestore.FieldValue.arrayUnion(tempName)\r\n            });\r\n          }\r\n        }).catch(function(error) {\r\n        console.log(\"Error getting document:\", error);\r\n        this.setState({ isSubmitting: false });\r\n        });*/\r\n\r\n    /*if(checker){\r\n        alert(\"Entered updated field\");\r\n        userRef.update({\r\n          cats: fire.firestore.FieldValue.arrayUnion(this.state.formValues.name)\r\n        })\r\n        .then(() => {\r\n          // NotificationManager.success(\"A new user has been added\", \"Success\");\r\n          window.location = \"/\";\r\n          console.log(\"sucessfully updated\")\r\n        })\r\n        .catch(error => {\r\n          console.log(\"Error updating document:\", error);\r\n          this.setState({ isSubmitting: false });\r\n        });\r\n    } else{\r\n      userRef.set(data)\r\n      .then(() => {\r\n        // NotificationManager.success(\"A new user has been added\", \"Success\");\r\n        window.location = \"/\";\r\n        console.log(\"sucessfully created\")\r\n      })\r\n      .catch(error => {\r\n        console.log(\"Error creating document:\", error);\r\n        this.setState({ isSubmitting: false });\r\n      });\r\n    }*/\r\n\r\n    /*\r\n    db.collection(\"sample_data\")\r\n    // db.collection(JSON.stringify(user))\r\n      .doc(user)\r\n      .set(data)\r\n      .then(() => {\r\n        // NotificationManager.success(\"A new user has been added\", \"Success\");\r\n        window.location = \"/\";\r\n      })\r\n      .catch(error => {\r\n        // NotificationManager.error(error.message, \"Create user failed\");\r\n        this.setState({ isSubmitting: false });\r\n      });*/\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    this.setState({ isSubmitting: true });\r\n    console.log(this.state.isSubmitting);\r\n    const { formValues, formValidity } = this.state;\r\n    if (Object.values(formValidity).every(Boolean)) {\r\n      this.addUser();\r\n    } else {\r\n      console.log(\"\")\r\n      const { formValues } = this.state;\r\n      for (let key in formValues) {\r\n        let target = {\r\n          name: key,\r\n          value: formValues[key]\r\n        };\r\n        this.setState({ formValues });\r\n        this.handleValidation(target);\r\n      }\r\n      // NotificationManager.error(\r\n      //   \"Please check on the validation message below form fields\",\r\n      //   \"Validation error\"\r\n      // );\r\n    }\r\n  };\r\n\r\n  handleAppendCat = ({ target }) => {\r\n    const { formValues } = this.state;\r\n    formValues[target.name] = target.value;\r\n    this.state.formValues.cats.push(target.value);\r\n    this.setState({ formValues });\r\n    this.handleValidation(target);\r\n  };\r\n  handleChangeName = ({ target }) => {\r\n    const { formValues } = this.state;\r\n    formValues[target.name] = target.value;\r\n    this.setState({ formValues });\r\n    this.handleValidation(target);\r\n  };\r\n  handleChangeRole = ({ target }) => {\r\n    const { formValues } = this.state;\r\n    formValues[target.name] = target.value;\r\n    this.setState({ formValues });\r\n    this.handleValidation(target);\r\n  };\r\n\r\n  handleValidation = target => {\r\n    const { name, value } = target;\r\n    const fieldValidationErrors = this.state.formErrors;\r\n    const validity = this.state.formValidity;\r\n    const isImage = name === \"image\";\r\n\r\n\r\n    if (!isImage && name ) {\r\n      validity[name] = value.length > 0;\r\n      fieldValidationErrors[name] = validity[name]\r\n        ? \"\"\r\n        : `${name} is required and cannot be empty`;\r\n    }\r\n\r\n    this.setState({\r\n      formErrors: fieldValidationErrors,\r\n      formValidity: validity\r\n    });\r\n  };\r\n\r\n  render() {\r\n    // console.log(\"Hi we're rendering the sample form now\");\r\n    // console.log(\"The current logged in user is \" + this.state.user);\r\n    const { formValues, formErrors, isSubmitting } = this.state;\r\n    return (\r\n      <>\r\n        <div className=\"row mb-5\">\r\n          <div className=\"col-lg-12 text-center\">\r\n            {/* <h1 className=\"mt-5\">SAMPLE FORM LET'S GO</h1> */}\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-12\">\r\n            <form onSubmit={this.handleSubmit}>\r\n              <div className=\"form-group\">\r\n                <label>Category of Spending</label>\r\n                <input\r\n                  class=\"mdl-textfield__input\"\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  className={`form-control ${\r\n                    formErrors.name ? \"is-invalid\" : \"\"\r\n                  }`}\r\n                  placeholder=\"Enter category name\"\r\n                  value={formValues.name}\r\n                  onChange={this.handleChangeName}\r\n                />\r\n                <div className=\"invalid-feedback\">{formErrors.name}</div>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Amount Spent</label>\r\n                <input\r\n                  type=\"number\"\r\n                  min=\"0\"\r\n                  max = \"999999\"\r\n                  step = \".01\"\r\n                  name=\"role\"\r\n                  className={`form-control ${\r\n                    formErrors.role ? \"is-invalid\" : \"\"\r\n                  }`}\r\n                  placeholder=\"Enter amount spent\"\r\n                  onChange={this.handleChangeRole}\r\n                  value={formValues.role}\r\n                />\r\n                <div className=\"invalid-feedback\">{formErrors.role}</div>\r\n              </div>\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn btn-primary btn-block\"\r\n                disabled={isSubmitting}\r\n                name=\"name\"\r\n                value={formValues.name}\r\n                onClick={this.handleAppendCat}\r\n              >\r\n                {isSubmitting ? \"Please wait...\" : \"Submit\"}\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SampleForm;\r\n","import React from \"react\";\nimport { db } from \"./config/firebase\";\nimport fire from \"./config/firebase\";\nimport firebase from 'firebase';\nimport {makeStyles} from '@material-ui/core/styles';\n//Form Dialog files\nimport Button from '@material-ui/core/Button';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n//actual form files\nimport TextField from '@material-ui/core/TextField';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { array } from \"prop-types\";\n\nclass ExpenseForm extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            name: '',\n            amount: '',\n            category: 'Bills & Utilities',\n            date: 0,\n        }\n        this.NewExpenseForm = this.NewExpenseForm.bind(this);\n        this.ExpenseFormDialog = this.ExpenseFormDialog.bind(this);\n        this.createExpense = this.createExpense.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    createExpense(name, amount, category, date){\n\t\treturn {name, amount, category, date};\n\t}\n\n    handleChange = prop => event => {\n        this.setState({\n            [prop]: event.target.value,\n        });\n    }\n\n    NewExpenseForm(){\n        const useStyles = makeStyles(theme => ({\n            root: {\n                display: 'flex',\n                flexWrap: 'wrap',\n            },\n            margin: {\n                margin: theme.spacing(1),\n            },\n            withoutLabel: {\n                marginTop: theme.spacing(3),\n            },\n            textField: {\n                width: 200,\n            },\n            menu: {\n                width: 200,\n            },\n        }));\n        const classes = useStyles();\n\n        const categories = [\n            {\n                value: 'Bills & Utilities'\n            },\n            {\n                value: 'Entertainment'\n            },\n            {\n                value: 'Food & Drink'\n            },\n            {\n                value: 'Groceries'\n            },\n            {\n                value: 'Gas'\n            },\n            {\n                value: 'Shopping'\n            },\n            {\n                value: 'Automotive'\n            },\n            {\n                value: 'Education'\n            },\n            {\n                value: 'Health & Wellness'\n            },\n            {\n                value: 'Gifts & Donations'\n            },\n            {\n                value: 'Personal'\n            },\n            {\n                value: 'Travel'\n            },\n            {\n                value: 'Home'\n            },\n        ];\n\n        return (\n          <div>\n            <FormControl className={(classes.margin, classes.textField)}>\n              <InputLabel htmlFor=\"standard-adornment-name\">Name</InputLabel>\n              <Input\n                id=\"standard-adornment-name\"\n                value={this.state.name}\n                onChange={this.handleChange(\"name\")}\n              />\n            </FormControl>\n            <FormControl className={(classes.margin, classes.textField)}>\n              <InputLabel htmlFor=\"standard-adornment-amount\">\n                Amount\n              </InputLabel>\n              <Input\n                id=\"standard-adornment-amount\"\n                type=\"number\"\n                step=\".01\"\n                min = \"0\"\n                max = \"999999\"\n                value={this.state.amount}\n                onChange={this.handleChange(\"amount\")}\n                startAdornment={\n                  <InputAdornment position=\"start\">$</InputAdornment>\n                }\n              />\n            </FormControl>\n            <TextField\n                id=\"standard-select-category-native\"\n                select\n                label=\"Category\"\n                className={classes.textField}\n                value={this.state.category}\n                onChange={this.handleChange(\"category\")}\n                SelectProps={{\n                    native: true,\n                    MenuProps: {\n                        className: classes.menu,\n                    },\n                }}\n                margin=\"normal\"\n            >\n              {categories.map(option => (\n                  <option key={option.value} value={option.value}>\n                      {option.value}\n                  </option>\n              ))}\n            </TextField>\n              {/* <TextField id=\"standard-adornment-category\" label=\"Category\" value={this.state.category} onChange={this.handleChange(\"category\")}>\n                <MenuItem value=\"10\">Ten</MenuItem>\n                <MenuItem value=\"20\">Twenty</MenuItem>\n              </TextField> */}\n            <TextField\n              id=\"date\"\n              label=\"Date of Expense\"\n              type=\"date\"\n              placeholder=\"YYYY-MM-DD\"\n              className={classes.textField}\n              value={this.state.date}\n              onChange={this.handleChange(\"date\")}\n              InputLabelProps={{\n                shrink: true\n              }}\n            />\n          </div>\n        );\n    }\n    ExpenseFormDialog(){\n        const useStyles = makeStyles(theme => ({\n            fab: {\n                margin: theme.spacing(1)\n            }\n        }));\n        const[open, setOpen] = React.useState(false);\n        const handleClickOpen = () => {\n            setOpen(true);\n        };\n        const handleClose = () => {\n            setOpen(false);\n        };\n        const handleAdd = () => {\n            //TODO add values to database\n            var purchase = [];\n            purchase = this.createExpense(this.state.name, this.state.amount, this.state.category, this.state.date);\n            let userRef = db.collection(\"users\").doc(fire.auth().currentUser.email);\n            console.log(purchase, \"Is going through\", fire.auth().currentUser.email);\n            let monthField = this.state.date.substring(0, 7);\n\n            console.log(monthField);\n            userRef.update({\n                expenses: firebase.firestore.FieldValue.arrayUnion(purchase)\n            })\n            .then(function(){\n              console.log(\"updating DB\")\n            })\n            .catch(function(error){\n              console.log(\"Error caused by no doc existing for db. Creating new categories: \", error)\n              userRef.set({\n                    expenses: purchase\n                }, { merge: true })\n                .catch(function(error){\n                  console.log(\"Somethings really wrong: \", error)\n                });\n            });\n            this.setState({\n                name: '',\n                amount: '',\n                category: 'Bills & Utilities',\n                date: '',\n            });\n            setOpen(false);\n        }\n        const classes = useStyles();\n        return (\n            <div>\n                <Fab color=\"primary\" aria-label=\"add\" className={classes.fab} onClick={handleClickOpen}>\n                    <AddIcon />\n                </Fab>\n                <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n                    <DialogTitle id=\"form-dialog-title\">New Expense</DialogTitle>\n                    <DialogContent>\n                        <this.NewExpenseForm />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={handleClose} color=\"primary\">\n                            Cancel\n                        </Button>\n                        <Button onClick={handleAdd} color=\"primary\">\n                            Add\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        )\n    }\n    render(){\n        return(\n                <div>\n                    <this.ExpenseFormDialog />\n                </div>\n        );\n    }\n\n}\nexport default ExpenseForm;\n","import React from \"react\";\nimport { db } from \"./config/firebase\";\nimport fire from \"./config/firebase\";\nimport ExpenseForm from \"./ExpenseForm\"\n// import Calculator from './layout/Calculator/Calculator';\n//expansion panel files\nimport {makeStyles} from '@material-ui/core/styles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n//expense table files\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { withRouter } from 'react-router-dom';\n// import \"mdbreact/dist/css/mdb.css\";\nimport {\n  MDBContainer,\n  MDBRow,\n  MDBCol,\n  MDBInput,\n  MDBBtn,\n  MDBCard,\n  MDBCardBody\n} from \"mdbreact\";\n\nclass Expenses extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\texpenses: [],\n\t\t\tfound: false,\n\t\t}\n\t\tthis.UserExpenseTable = this.UserExpenseTable.bind(this);\n\t\tthis.ExampleExpenseTable = this.ExampleExpenseTable.bind(this);\n\t\tthis.Accordion = this.Accordion.bind(this);\n\t}\n\n\tcreateExpense(name, amount, category, date){\n\t\treturn {name, amount, category, date};\n\t}\n\tcomponentDidMount() {\n\t\tlet currentComp = this;\n\n\t\tfire.auth().onAuthStateChanged(function(user) {\n\t\t\tif(user){\n\t\t\t\tvar userRef = db.collection(\"users\").doc(fire.auth().currentUser.email);\n\t\t\t\tvar username = fire.auth().currentUser.email;\n\n\t\t\t\tuserRef.onSnapshot({\n\t\t\t\t\t// Listen for document metadata changes\n\t\t\t\t\tincludeMetadataChanges: true\n\t\t\t\t}, function(doc) {\n\t\t\t\t\tif(doc.data().expenses === undefined){\n\t\t\t\t\t\tcurrentComp.setState({\n\t\t\t\t\t\t\tfound: false\n\t\t\t\t\t\t});\n\t\t\t\t\t}else{\n\t\t\t\t\t\tcurrentComp.setState({\n\t\t\t\t\t\t\texpenses: doc.data().expenses,\n\t\t\t\t\t\t\tfound: true,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\tAccordion(){\n\t\tconst useStyles = makeStyles(theme => ({\n\t\t\troot: {\n\t\t\t\twidth: '100%',\n\t\t\t},\n\t\t\theading: {\n\t\t\t\tfontSize: theme.typography.pxToRem(15),\n\t\t\t\tfontWeight: theme.typography.fontWeightRegular,\n\t\t\t},\n\t\t}));\n\n\t\tconst classes = useStyles();\n\t\t\n\t\tlet table;\n\t\tif(this.state.found){\n\t\t\ttable = <this.UserExpenseTable />;\n\t\t}else{\n\t\t\ttable = <this.ExampleExpenseTable />;\n\t\t}\n\n\t\treturn (\n      <div className={classes.root}>\n        <ExpansionPanel>\n          <ExpansionPanelSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel1a-content\"\n            id=\"panel1a-header\"\n          >\n            <Typography className={classes.heading}>\n              Your Expense Log\n            </Typography>\n          </ExpansionPanelSummary>\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            //   height: \"30vh\"\n            }}\n          >\n            <ExpansionPanelDetails>\n              <Typography>{table}</Typography>\n            </ExpansionPanelDetails>\n          </div>\n        </ExpansionPanel>\n      </div>\n    );\n\t}\n\n\tExampleExpenseTable(){\n\t\tconst useStyles = makeStyles({\n\t\t\troot: {\n\t\t\t\twidth: '100%',\n\t\t\t\toverflowX: 'auto',\n\t\t\t},\n\t\t\ttable: {\n\t\t\t\tminWidth: 650,\n\t\t\t},\n\t\t});\n\t\tvar examples = [];\n\t\texamples = [this.createExpense('Stater Bros', 50, 'Groceries', '11/25/2019')]\n\t\texamples.push(this.createExpense('Movie', 30, 'Entertainment', '11/18/2019'));\n\t\texamples.push(this.createExpense('Disneyland', 300, 'Entertainment', '11/10/2019'));\n\t\tconst classes = useStyles();\n\t\treturn (\n\t\t\t<Paper className={classes.root}>\n\t\t\t\t<Table className={classes.table} aria-label=\"Example Expenses\">\n\t\t\t\t\t<TableHead>\n\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t<TableCell>Example Expenses</TableCell>\n\t\t\t\t\t\t\t<TableCell align=\"right\">Amount</TableCell>\n\t\t\t\t\t\t\t<TableCell align=\"right\">Category</TableCell>\n\t\t\t\t\t\t\t<TableCell align=\"right\">Date</TableCell>\n\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t</TableHead>\n\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t{examples.map(examples => (\n\t\t\t\t\t\t\t<TableRow key = {examples.index}>\n\t\t\t\t\t\t\t\t<TableCell component=\"th\" scope=\"row\">\n\t\t\t\t\t\t\t\t\t{examples.name}\n\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t<TableCell align=\"right\">{examples.amount}</TableCell>\n\t\t\t\t\t\t\t\t<TableCell align=\"right\">{examples.category}</TableCell>\n\t\t\t\t\t\t\t\t<TableCell align=\"right\">{examples.date}</TableCell>\n\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</TableBody>\n\t\t\t\t</Table>\n\t\t\t</Paper>\n\t\t);\n\t}\n\n\tUserExpenseTable(){\n\t\tconst useStyles = makeStyles({\n\t\t\troot: {\n\t\t\t\twidth: '100%',\n\t\t\t\toverflowX: 'auto',\n\t\t\t},\n\t\t\ttable: {\n\t\t\t\tminWidth: 650,\n\t\t\t},\n\t\t});\n\t\tconst classes = useStyles();\n\t\treturn (\n\t\t\t<Paper className={classes.root}>\n\t\t\t\t<Table className={classes.table} aria-label=\"Expenses\">\n\t\t\t\t\t<TableHead>\n\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t<TableCell>Expense</TableCell>\n\t\t\t\t\t\t\t<TableCell align=\"right\">Amount</TableCell>\n\t\t\t\t\t\t\t<TableCell align=\"right\">Category</TableCell>\n\t\t\t\t\t\t\t<TableCell align=\"right\">Date</TableCell>\n\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t</TableHead>\n\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t{this.state.expenses.map(expenses => (\n\t\t\t\t\t\t\t<TableRow key = {expenses.index}>\n\t\t\t\t\t\t\t\t<TableCell component=\"th\" scope=\"row\">\n\t\t\t\t\t\t\t\t\t{expenses.name}\n\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t<TableCell align=\"right\">{expenses.amount}</TableCell>\n\t\t\t\t\t\t\t\t<TableCell align=\"right\">{expenses.category}</TableCell>\n\t\t\t\t\t\t\t\t<TableCell align=\"right\">{expenses.date}</TableCell>\n\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</TableBody>\n\t\t\t\t</Table>\n\t\t\t</Paper>\n\t\t);\n\t}\n\n\trender(){\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t {/* <MDBContainer> */}\n          {/* <MDBCard> */}\n            {/* <MDBCardBody> */}\n\t\t\t\t<this.Accordion />\n\t\t\t\t<ExpenseForm />\n\t\t\t\t{/* </MDBCardBody> */}\n\t\t\t\t{/* </MDBCard> */}\n\t\t\t\t{/* </MDBContainer> */}\n\t\t\t</div>\n\t\t);\n\t}\n}\nexport default withRouter(Expenses);","import React, { Component } from \"react\";\r\n\r\nimport { db } from \"./config/firebase\";\r\nimport fire from \"./config/firebase\";\r\n\r\nexport class Budget extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      budget: \"\",\r\n      display_budget: \"\",\r\n      name: \"\"\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Updates state of input\r\n   */\r\n  updateInput = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Updates budget in firestore\r\n   */\r\n  setBudget = e => {\r\n    e.preventDefault();\r\n    //   const db = f.firestore();\r\n    // db.settings({\r\n    //   // timestampsInSnapshots: true\r\n    // });\r\n\r\n    let userRef = db\r\n      .collection(\"users\")\r\n      .doc(fire.auth().currentUser.email);\r\n\r\n    //   console.log(tempname);\r\n    userRef.update({\r\n      budget: this.state.budget\r\n    });\r\n    this.setState({\r\n      budget: \"\"\r\n    });\r\n    // console.log(\"Set budget is complete\");\r\n  };\r\n\r\n  componentDidMount() {\r\n    // fire.auth().updateCurrentUser();\r\n        // var name_fromdb = fire.auth().currentUser.email;\r\n        // this.setState({\r\n          // name: name_fromdb\r\n        // });\r\n            // console.log(name_fromdb);\r\n    var budget_copy = 0;\r\n    var found = 0;\r\n    fire\r\n      .firestore()\r\n      .collection(\"users\")\r\n      .get()\r\n      .then(querySnapshot => {\r\n        querySnapshot.forEach(function(doc) {\r\n          if (doc.id == fire.auth().currentUser.email) {\r\n            budget_copy = doc.data().budget;\r\n            found = 1;\r\n          }\r\n        });\r\n        if (found == 0) {\r\n          this.setState({\r\n            display_budget: \"undefined\"\r\n          });\r\n        } else\r\n          this.setState({\r\n            display_budget: budget_copy\r\n          });\r\n      })\r\n\r\n      .catch(function(error) {\r\n        // alert(\"Error fetching user data\");\r\n        console.log(\"Error fetching data: \", error);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <p>{this.state.display_budget}</p>\r\n        <form onSubmit={this.setBudget}>\r\n          <div class=\"mdl-textfield mdl-js-textfield\">\r\n            <input\r\n              class=\"mdl-textfield__input\"\r\n              type=\"number\"\r\n              step = \".01\"\r\n              name=\"budget\"\r\n              placeholder=\"Set your budget\"\r\n              onChange={this.updateInput}\r\n              value={this.state.budget}\r\n              required\r\n            />\r\n          </div>\r\n          <button\r\n            class=\"mdl-button mdl-js-button mdl-button--raised mdl-button--colored  \"\r\n            type=\"submit\"\r\n          >\r\n            Save\r\n          </button>\r\n          <br></br>\r\n          {/* <input type=\"email\" name=\"email\" placeholder=\"Full name\" /> */}\r\n        </form>\r\n      </div>\r\n    );\r\n    //  }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    var budget_copy = 0;\r\n    var found = 0;\r\n    fire\r\n      .firestore()\r\n      .collection(\"users\")\r\n      .get()\r\n      .then(querySnapshot => {\r\n        querySnapshot.forEach(function(doc) {\r\n          if (doc.id == fire.auth().currentUser.email) {\r\n            budget_copy = doc.data().budget;\r\n            found = 1;\r\n          }\r\n        });\r\n        if (found == 0) {\r\n          this.setState({\r\n            display_budget: \"undefined\"\r\n          });\r\n        } else\r\n          this.setState({\r\n            display_budget: budget_copy\r\n          });\r\n      })\r\n\r\n      .catch(function(error) {\r\n        // alert(\"Error fetching user data\");\r\n        console.log(\"Error fetching data: \", error);\r\n      });\r\n  }\r\n\r\n  onKeyPress(event) {\r\n    const keyCode = event.keyCode || event.which;\r\n    const keyValue = String.fromCharCode(keyCode);\r\n    if (/\\+|-/.test(keyValue))\r\n      event.preventDefault();\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div>\r\n        {/* Welcome back {this.state.name} <br></br> */}\r\n        Current budget: <b>${this.state.display_budget}</b>\r\n        <form onSubmit={this.setBudget}>\r\n          <div class=\"mdl-textfield mdl-js-textfield\">\r\n            <input\r\n              class=\"mdl-textfield__input\"\r\n              onKeyPress={this.onKeyPress.bind(this)} \r\n              type=\"number\"\r\n              min = \"0\"\r\n              max = \"999999\"\r\n              step = \".01\"\r\n              name=\"budget\"\r\n              placeholder=\"Set your budget\"\r\n              onChange={this.updateInput}\r\n              value={this.state.budget}\r\n              required\r\n            />\r\n          </div>\r\n          <button\r\n            class=\"mdl-button mdl-js-button mdl-button--raised mdl-button--colored  \"\r\n            type=\"submit\"\r\n          >\r\n            Save\r\n          </button>\r\n          <br></br>\r\n          {/* <input type=\"email\" name=\"email\" placeholder=\"Full name\" /> */}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Budget;","import React, { Component } from \"react\";\nimport fire from \"./config/firebase\";\nimport { db } from \"./config/firebase\";\nimport Expenses from \"./Expenses\";\n\nexport class SpendingLog extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      Spendings: [],\n      cat: [],\n      spending: [],\n      zipped: []\n    };\n    // this.testingLOL = this.testingLOL.bind(this);\n  }\n\n  state = { Spendings: [] };\n\n  componentDidMount() {\n    //******COMMENTED OUT FOR NOW TO TEST IF DB WONT EXCEED QUOTA************\n    /*var categories_copy = [];\n    var spending_copy = [];\n    var found = 0;\n    fire\n      .firestore()\n      .collection(\"sample_data\")\n      .get()\n      .then(querySnapshot => {\n        querySnapshot.forEach(function(doc) {\n          if (doc.id == fire.auth().currentUser.email) {\n            spending_copy.spending = doc.data().spending;\n            categories_copy.cat = doc.data().cats;\n            found = 1;\n            return;\n          }\n        });\n        if (found == 0) {\n          this.setState({\n            cat: [\"NONE\"],\n            spending: [\"NONE\"]\n          });\n        } else\n          this.setState({\n            cat: categories_copy.cat,\n            spending: spending_copy.spending\n          });\n      })\n      .catch(function(error) {\n        console.log(\"Error fetching data: \", error);\n      });\n    // this.testingLOL();*/\n  }\n\n  render() {\n    const items = [];\n    const zipped = this.state.cat.map((x, i) => [x, this.state.spending[i]]);\n    for (const [index, value] of zipped.entries()) {\n      items.push(\n        <li>\n          Category: {value[0]}, Spending: ${value[1]}\n        </li>\n      );\n    }\n    console.log(items);\n    return <div>{items}</div>;\n  }\n}\n\nexport default SpendingLog;\n","import React, { Component } from \"react\";\r\nimport {Line} from 'react-chartjs-2';\r\nimport {Doughnut} from 'react-chartjs-2'\r\nimport { db } from \"./config/firebase\";\r\nimport fire from \"./config/firebase\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport { array } from \"prop-types\";\r\n\r\n\r\nimport {\r\n  MDBContainer,\r\n  MDBRow,\r\n  MDBCol,\r\n  MDBInput,\r\n  MDBBtn,\r\n  MDBCard,\r\n  MDBCardBody\r\n} from \"mdbreact\";\r\nimport {BrowserRouter as Router} from \"react-router-dom\";\r\n\r\n//want to show balance taken from database after being set\r\nlet fourSpent = 200, threeSpent = 320, twoSpent = 50, oneSpent = 70, currSpent = 0;  //use spending from spending log\r\n\r\nclass LineGraph extends Component{\r\n\r\n\r\n\r\n\r\n\r\n    constructor(props){\r\n\r\n\r\n\r\n        let currDate = new Date();      //date is based on UTC timezone, change to user's timezone\r\n        let lastWeek = new Date();\r\n        lastWeek.setDate(lastWeek.getDate()-7);\r\n        let twoWeeks = new Date();\r\n        twoWeeks.setDate(twoWeeks.getDate()-14);\r\n        let threeWeeks = new Date();\r\n        threeWeeks.setDate(threeWeeks.getDate()-21);\r\n        let fourWeeks = new Date();\r\n        fourWeeks.setDate(fourWeeks.getDate()-28);\r\n\r\n\r\n\r\n        super(props);\r\n\r\n        //everything under is for the wallet balance input except chartData\r\n        this.state = { value: '', pastInput: 1, decimal: false,\r\n          expenses:[], monthCat: {}, monthList: [], currMonth: \"2019-12\",\r\n          currMonthIndex: 0,\r\n        //for the line and pie charts\r\n        graphData:[{\r\n          labels: [\r\n            (fourWeeks.getUTCMonth() + 1) + '/' + fourWeeks.getUTCDate(),\r\n            (threeWeeks.getUTCMonth() + 1) + '/' + threeWeeks.getUTCDate(),\r\n            (twoWeeks.getUTCMonth() + 1) + '/' + twoWeeks.getUTCDate(),\r\n            (lastWeek.getUTCMonth() + 1) + '/' + lastWeek.getUTCDate(),\r\n            (currDate.getUTCMonth() + 1) + '/' + currDate.getUTCDate()\r\n          ],\r\n          datasets:[\r\n            {\r\n              label: 'Spent',\r\n              data:[\r\n                fourSpent,\r\n                threeSpent,\r\n                twoSpent,\r\n                oneSpent,\r\n                currSpent,\r\n              ],\r\n              backgroundColor:[\r\n                'rgba(224, 54, 20, 0.2)'\r\n              ],\r\n              borderColor: [\r\n                'rgba(224, 54, 20,1)'\r\n              ],\r\n            },\r\n\r\n          ],\r\n        },\r\n        {\r\n          datasets:[\r\n            {\r\n              data:[\r\n                fourSpent,\r\n                threeSpent,\r\n                twoSpent,\r\n                oneSpent,\r\n                currSpent,\r\n              ],\r\n              backgroundColor:[\r\n                'rgba(255, 0, 0, .75)'\r\n              ],\r\n              borderColor: [\r\n                '#fff'\r\n              ],\r\n            },\r\n\r\n          ],\r\n          labels: [\r\n            (fourWeeks.getUTCMonth() + 1) + '/' + fourWeeks.getUTCDate(),\r\n            (threeWeeks.getUTCMonth() + 1) + '/' + threeWeeks.getUTCDate(),\r\n            (twoWeeks.getUTCMonth() + 1) + '/' + twoWeeks.getUTCDate(),\r\n            (lastWeek.getUTCMonth() + 1) + '/' + lastWeek.getUTCDate(),\r\n            (currDate.getUTCMonth() + 1) + '/' + currDate.getUTCDate()\r\n          ],\r\n        }\r\n      ],\r\n\r\n    };\r\n\r\n\r\n    /*var tempExpense = [];\r\n    var found = 0;\r\n    var userRef = db.collection(\"users\").doc(fire.auth().currentUser.email)\r\n    .catch(function(error){\r\n      console.log(\"We getting an error: \", error)\r\n      userRef = db.collection(\"users\").doc(\" \")\r\n    })\r\n\r\n\r\n    userRef.onSnapshot({\r\n        // Listen for document metadata changes\r\n        includeMetadataChanges: true\r\n    }, function(doc) {\r\n      this.setState({\r\n        expenses: doc.data().expenses\r\n      })\r\n      .then(function(){\r\n        console.log(this.state.expenses)\r\n      })\r\n      .catch(function(error){\r\n        console.log(\"We getting an error: \", error)\r\n        this.setState({\r\n          expenses: []\r\n        })\r\n      });\r\n    })*/\r\n\r\n\r\n\r\n  }\r\n  /*componentDidMount() {\r\n    var categories_copy = [];\r\n    var spending_copy = [];\r\n    var found = 0;\r\n    fire\r\n      .firestore()\r\n      .collection(\"sample_data\")\r\n      .get()\r\n      .then(querySnapshot => {\r\n        querySnapshot.forEach(function(doc) {\r\n          if (doc.id == fire.auth().currentUser.email) {\r\n            spending_copy.spending = doc.data().spending;\r\n            categories_copy.cat = doc.data().cats;\r\n            found = 1;\r\n            return;\r\n          }\r\n        });\r\n        if (found == 0) {\r\n          this.setState({\r\n            expenses: []\r\n          });\r\n        } else\r\n          this.setState({\r\n            expenses: []\r\n          });\r\n      })\r\n      .catch(function(error) {\r\n        console.log(\"Error fetching data: \", error);\r\n      });\r\n    // this.testingLOL();\r\n  }*/\r\n\r\n  /*hslToRgb(h, s, l) { // convert hsl values to RGB\r\n    var r, g, b;\r\n\r\n    if (s == 0) {\r\n      r = g = b = l; // achromatic\r\n    } else {\r\n      function hue2rgb(p, q, t) {\r\n        if (t < 0) t += 1;\r\n        if (t > 1) t -= 1;\r\n        if (t < 1/6) return p + (q - p) * 6 * t;\r\n        if (t < 1/2) return q;\r\n        if (t < 2/3) return p + (q - p) * (2/3 - t) * 6;\r\n        return p;\r\n      }\r\n\r\n      var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n      var p = 2 * l - q;\r\n\r\n      r = hue2rgb(p, q, h + 1/3);\r\n      g = hue2rgb(p, q, h);\r\n      b = hue2rgb(p, q, h - 1/3);\r\n    }\r\n\r\n    return [ r * 255, g * 255, b * 255 ];\r\n  }*/\r\n  handleChangeSelect = ({ target }) => {\r\n    this.setState({\r\n      currMonth: target.value\r\n    })\r\n\r\n    let index = this.state.monthList.indexOf(this.state.currMonth);\r\n\r\n    if(index != -1){\r\n      this.setLineGraphData(index);\r\n      this.setDoughnutGraphData(index);\r\n    }\r\n    \r\n  };\r\n\r\n  splitByMonth = () => {\r\n    let tempMonthCatArr = [];\r\n    for(let i = 0; i < this.state.expenses.length; i++){\r\n      let currMonthCat = this.state.expenses[i].date.substr(0,7);\r\n      if(!(currMonthCat in this.state.monthCat)){\r\n        this.state.monthCat[currMonthCat] = [this.state.expenses[i]];\r\n        this.state.monthList.push(currMonthCat);\r\n      }\r\n      else{\r\n          this.state.monthCat[currMonthCat].push(this.state.expenses[i]);\r\n      }\r\n      console.log(this.state.monthCat);\r\n      console.log(this.state.monthList);\r\n    }\r\n  }\r\n\r\n\r\n\r\n  selectColor = (colorInd) => {\r\n      let arr = ['rgba(255, 0, 0, .75)', 'rgba(255, 128, 0, .75)', 'rgba(255, 255, 0, .75)',\r\n      'rgba(128, 255, 0, .75)', 'rgba(0, 255, 0, .75)', 'rgba(0, 255, 128, .75)',\r\n      'rgba(0, 255, 255, .75)', 'rgba(0, 128, 255, .75)', 'rgba(0, 0, 255, .75)',\r\n      'rgba(127, 0, 255, .75)', 'rgba(255, 0, 255, .75)', 'rgba(255, 0, 127, .75)',\r\n      'rgba(128, 128, 128, .75)', 'rgba(223, 223, 223, .75)', 'rgba(25, 25, 25, .75)',\r\n    ]\r\n\r\n    return (arr[colorInd])\r\n\r\n  }\r\n\r\n\r\n  setLineGraphData = (monthInd) => {\r\n    let tempMonthCat = this.state.monthCat[this.state.monthList[monthInd]];\r\n    let arrSpent = []\r\n    let arrDate = []\r\n    for(let i = 0; i < tempMonthCat.length; i++){\r\n      let currSpent = parseFloat(tempMonthCat[i].amount);\r\n      let rawDate =  tempMonthCat[i].date;\r\n      let currDate = rawDate.charAt(5) + rawDate.charAt(6) + \"/\" + rawDate.charAt(8) + rawDate.charAt(9);\r\n      let sameDate = arrDate.indexOf(currDate);\r\n      //console.log(\"yes\")\r\n      //console.log(temp)\r\n      if(sameDate != -1){\r\n        arrSpent[sameDate] = arrSpent[sameDate] + currSpent;\r\n        arrSpent[sameDate] = parseFloat(arrSpent[sameDate].toPrecision(4));\r\n        //console.log(\"Going through at index: \", temp)\r\n      }\r\n\r\n      else{\r\n        arrSpent.push(currSpent);\r\n        arrDate.push(currDate); // for LineGraph Dates\r\n      }\r\n    }\r\n    //console.log(arrSpent);\r\n    //console.log(arrDate);\r\n    this.state.graphData[0].labels = arrDate;\r\n    this.state.graphData[0].datasets[0].data = arrSpent;\r\n    //console.log(\"stateData: \", this.state.lineData.datasets[0].data)\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  setDoughnutGraphData = (monthInd) =>{\r\n    let tempMonthCat = this.state.monthCat[this.state.monthList[monthInd]];\r\n    let arrSpent = [];\r\n    let arrCategory = [];\r\n    let arrColor = [];\r\n    for(let i = 0; i < tempMonthCat.length; i++){\r\n      let currSpent = parseFloat(tempMonthCat[i].amount);\r\n      let currCategory = tempMonthCat[i].category;\r\n      let sameCategory = arrCategory.indexOf(currCategory);\r\n\r\n      if(sameCategory != -1){\r\n        arrSpent[sameCategory] = arrSpent[sameCategory] + currSpent;\r\n        arrSpent[sameCategory] = parseFloat(arrSpent[sameCategory].toPrecision(4));\r\n        //console.log(\"Going through at index: \", temp)\r\n      }\r\n\r\n      else{\r\n        arrSpent.push(currSpent);\r\n        arrCategory.push(currCategory); // for PieGraph Sections\r\n        let currColor = this.selectColor(arrColor.length);\r\n        arrColor.push(currColor);\r\n      }\r\n    }\r\n    //console.log(arrSpent);\r\n    //console.log(arrDate);\r\n    this.state.graphData[1].labels = arrCategory;\r\n    this.state.graphData[1].datasets[0].data = arrSpent;\r\n    //console.log(arrColor) //Add back after testing\r\n    this.state.graphData[1].datasets[0].backgroundColor = arrColor;\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    let currentComp = this;\r\n\r\n    fire.auth().onAuthStateChanged(function(user) {\r\n      if(user){\r\n        var tempExpense = [];\r\n        var found = 0;\r\n        var userRef = db.collection(\"users\").doc(fire.auth().currentUser.email);\r\n        var username = fire.auth().currentUser.email;\r\n\r\n        userRef.onSnapshot({\r\n            // Listen for document metadata changes\r\n            includeMetadataChanges: true\r\n        }, function(doc) {\r\n                  try{\r\n                    currentComp.setState({\r\n                      expenses: doc.data().expenses\r\n                    });\r\n                    console.log(currentComp.state.expenses)\r\n                    console.log(\"Going through userRef snapshot\")\r\n\r\n                    currentComp.splitByMonth();\r\n\r\n                    currentComp.setLineGraphData(0);\r\n                    currentComp.setDoughnutGraphData(0);\r\n\r\n                  }\r\n                  catch(error){\r\n                    console.log(\"We getting an error: \", error)// ADD back later\r\n                    found = 0\r\n                  }\r\n\r\n                })\r\n\r\n          if (found == 1) {\r\n            //console.log(\"does hit this\")\r\n          }\r\n          else{\r\n            currentComp.setState({\r\n              expenses: [\"None\"]\r\n            });\r\n          }\r\n\r\n\r\n      }\r\n\r\n\r\n\r\n    });\r\n  };\r\n\r\n\r\n\r\n    render(){\r\n\r\n        return (\r\n          <div>\r\n            <Router>\r\n            <MDBContainer>\r\n              <MDBCard>\r\n                <MDBCardBody>\r\n                  <h3>Your Statistics</h3>\r\n                  <div>\r\n                    <FormControl >\r\n                        <InputLabel id=\"demo-simple-select-label\">Month</InputLabel>\r\n                        <Select\r\n                          labelId=\"demo-simple-select-label\"\r\n                          id=\"demo-simple-select\"\r\n                          value={this.state.currMonth}\r\n                          onChange={this.handleChangeSelect}\r\n                        >\r\n                          {this.state.monthList.map(option => (\r\n                              <MenuItem key={option} value={option}>\r\n                                  {option}\r\n                              </MenuItem>\r\n                          ))}\r\n                        </Select>\r\n                      </FormControl>\r\n                    <Line\r\n                      data={this.state.graphData[0]}\r\n                      width={500}\r\n                      height={200}\r\n                      options={{\r\n                        responsive: true,\r\n\r\n                        title: {\r\n                          display: true,\r\n                          text: \"Monthly Spending History Per Day\",\r\n                          fontSize: 20\r\n                        },\r\n                        legend: {\r\n                          display: true,\r\n                          position: \"top\"\r\n                        },\r\n                        layout: {\r\n                          padding: {\r\n                            left: 0,\r\n                            right: 0,\r\n                            top: 0,\r\n                            bottom: 10\r\n                          }\r\n                        }\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div>\r\n                    <Doughnut\r\n                      data={this.state.graphData[1]}\r\n                      width={100}\r\n                      height={350}\r\n                      options={{\r\n                        responsive: true,\r\n                        maintainAspectRatio: false,\r\n\r\n                        title: {\r\n                          display: true,\r\n                          text: \"Monthly Spending History Per Category\",\r\n                          fontSize: 20\r\n                        },\r\n                        legend: {\r\n                          display: true,\r\n                          position: \"top\"\r\n                        },\r\n                        layout: {\r\n                          padding: {\r\n                            left: 0,\r\n                            right: 0,\r\n                            top: 0,\r\n                            bottom: 10\r\n                          }\r\n                        }\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </MDBCardBody>\r\n              </MDBCard>\r\n            </MDBContainer>\r\n            </Router>\r\n          </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default withRouter(LineGraph);\r\n","import React, { Component } from \"react\";\n//import logo from \"./logo.svg\";\n// import \"./App.css\";\nimport {\n  MDBContainer,\n  MDBRow,\n  MDBCol,\n  MDBInput,\n  MDBBtn,\n  MDBCard,\n  MDBCardBody\n} from \"mdbreact\";\n\nclass Converter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      rates: {}\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://api.exchangeratesapi.io/latest?base=USD\") // data source is an object, not an array.\n      .then(res => res.json()) // Short typo for response.\n      .then(\n        result => {\n          this.setState({\n            isLoaded: true,\n            rates: result.rates\n          });\n        },\n        error => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      );\n  }\n\n  prettyCurrency = (crr, action) => {\n    if (action === 0) {\n      crr = (crr * 102) / 100;\n    } else if (action === 1) {\n      crr = (crr * 98) / 100;\n    } else {\n      // Do nothing...\n    }\n    var fixedCrr = crr.toFixed(4).toString();\n    while (fixedCrr.length < 8) {\n      fixedCrr = \"0\" + fixedCrr;\n    }\n\n    return fixedCrr;\n  };\n\n  createTable = () => {\n    const rates = this.state;\n    let ratesArr = Object.keys(rates).map(i => rates[i])[2];\n    let table = [];\n    let children = [];\n    let displayedCurrencies = [\"RUB\", \"CAD\", \"GBP\", \"CHF\", \"JPY\", \"EUR\"];\n\n    // The following loop is used to create inner structure (children) of the table.\n    for (var key in ratesArr) {\n      if (ratesArr.hasOwnProperty(key) && displayedCurrencies.includes(key)) {\n        children.push(\n          <tr>\n            <td>{key}</td>\n            <td>{this.prettyCurrency(ratesArr[key], 0)}</td>\n            <td>{this.prettyCurrency(ratesArr[key])}</td>\n            <td>{this.prettyCurrency(ratesArr[key], 1)}</td>\n          </tr>\n        );\n      }\n    }\n    table.push(<tbody>{children}</tbody>); // We create the parent tbody tags and add the inner loop (children).\n\n    return table;\n  };\n\n  render() {\n    const { error, isLoaded } = this.state;\n\n    if (error) {\n      return <div>Oops: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n      return (\n        <div>\n          <MDBContainer>\n            <MDBCard>\n              <MDBCardBody>\n                <h3>Live Exchange Rates</h3>\n                {/* <div className=\"App-body\"> */}\n                <table className=\"currencyTable\">\n                  <thead>\n                    <tr>\n                      <th>&nbsp;</th>\n                      <th>BUY</th>\n                      <th>EXCHANGE RATE</th>\n                      <th>SELL</th>\n                    </tr>\n                  </thead>\n                  {this.createTable()}\n                </table>\n                <p>\n                  {/* * base currency is GBP */}\n                  <br />\n                  Data fetched from&nbsp;\n                  <a href=\"https://exchangeratesapi.io/\">\n                    https://exchangeratesapi.io/\n                  </a>\n                  &nbsp;\n                </p>\n              </MDBCardBody>\n            </MDBCard>\n          </MDBContainer>\n        </div>\n      );\n    }\n  }\n}\n\nexport default Converter;\n","import React, { Component, useState, useRef } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./homepage.css\";\r\nimport Chevron from \"./Chevron\";\r\nimport SampleForm from \"./SampleForm\";\r\nimport fire from \"./config/firebase\";\r\nimport { db } from \"./config/firebase\";\r\nimport SpendingLog from \"./SpendingLog\";\r\nimport { Card, Button, Accordion } from \"react-bootstrap\";\r\nimport Expenses from \"./Expenses\";\r\nimport Budget from \"./Budget\";\r\nimport Calculator from \"./Calculator\";\r\nimport PieChart from \"react-minimal-pie-chart\";\r\nimport { Line, Doughnut } from \"react-chartjs-2\";\r\nimport LineGraph from \"./LineGraph\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport Converter from \"./Converter\";\r\n\r\nfunction Accordion_OG(props) {\r\n  // tester: fire.auth().currentUser.email\r\n  //setActive is the variable and setActiveState is the function that changes that variable\r\n  const [setActive, setActiveState] = useState(\"notActive\"); //useState allows for state variables inside of functions\r\n  const [setHeight, setHeightState] = useState(\"0px\");\r\n  const [setRotate, setRotateState] = useState(\"accordion_icon\");\r\n  const panel = useRef(null); //like a 'box' that can hold mutable items in it\r\n\r\n  function toggleAccordion() {\r\n    setActiveState(setActive === \"notActive\" ? \"active\" : \"notActive\");\r\n    setHeightState(\r\n      setActive === \"active\" ? \"0px\" : `${panel.current.scrollHeight}px`\r\n    );\r\n    setRotateState(\r\n      setActive === \"active\" ? \"accordion_icon\" : \"accordion_icon rotate\"\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"accordion_section\">\r\n      <button className={`accordion ${setActive}`} onClick={toggleAccordion}>\r\n        <p className=\"accordion_title\">{props.title}</p>\r\n        <Chevron\r\n          className={`${setRotate}`}\r\n          width={13}\r\n          fill={\"#777\"}\r\n          stroke={\"#777\"}\r\n          weight={25}\r\n        />\r\n      </button>\r\n      <div\r\n        ref={panel}\r\n        style={{ maxHeight: setHeight }}\r\n        className=\"accordion_panel\"\r\n      >\r\n        <div\r\n          className=\"accordion_text\"\r\n          dangerouslySetInnerHTML={{ __html: props.content }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nclass Homepage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      // : \"\",\r\n      focus: \"\"\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    // this.authListener();\r\n    let currentComp = this;\r\n\r\n    fire.auth().onAuthStateChanged(function(user) {\r\n      if (user) {\r\n        var found = 0;\r\n        var userRef = db.collection(\"users\").doc(fire.auth().currentUser.email);\r\n        var username = fire.auth().currentUser.email;\r\n        userRef.onSnapshot(\r\n          {\r\n            includeMetadataChanges: true\r\n          },\r\n          function(doc) {\r\n            try {\r\n              //    if (this._isMounted) {\r\n\r\n              currentComp.setState({\r\n                // budget: doc.data().budget,\r\n                focus: doc.data().focus\r\n              });\r\n              // }\r\n            } catch (error) {\r\n              console.log(\"We getting an error: \", error); // ADD back later\r\n              found = 0;\r\n            }\r\n          }\r\n        );\r\n\r\n        if (found == 1) {\r\n          //console.log(\"does hit this\")\r\n        } else {\r\n          currentComp.setState({\r\n            focus: [\"N/A\"]\r\n          });\r\n        }\r\n      }\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.focus ? (\r\n          <div>\r\n            Your focus:{\" \"}\r\n            <b>\r\n              <mark>{this.state.focus}</mark>\r\n            </b>{\" \"}\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <mark>You currently do not have a focus, set one in your profile page!</mark>\r\n          </div>\r\n        )}\r\n        <Budget />\r\n        {/* <Converter /> */}\r\n        <Expenses />\r\n        {/*   \r\n        {/* <Expenses /> */}\r\n        {/* <h3>Spending Log</h3> */}\r\n        {/* <Accordion\r\n            title=\"Spending Log\"\r\n            <SpendingLog />\r\n            /> */}\r\n        {/* // <SpendingLog /> */}\r\n        {/* /> */}\r\n        {/* <SampleForm /> */}\r\n        <br></br>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <Homepage />\r\n  </Router>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n//serviceWorker.unregister();\r\nexport default Homepage;\r\n","import React from \"react\";\nimport {\n  MDBContainer,\n  MDBRow,\n  MDBCol,\n  MDBInput,\n  MDBBtn,\n  MDBCard,\n  MDBCardBody\n} from \"mdbreact\";\n\nvar totalcalc;\nvar totalmonths;\n\nclass SpendingCalc extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      amountneed: '',\n      currentsave: '',\n\t  yearstosave: '',\n\t  monthstosave: '',\n      amError: '',\n      csError: '',\n\t  yrError: '',\n\t  moError: ''\n    };\n  }\n\n  handleAMChange = event => {\n    this.setState({ amountneed: event.target.value }, () => {\n      this.validateAM();\n    });\n  };\n\n\n  handleCSChange = event => {\n    this.setState({ currentsave: event.target.value }, () => {\n      this.validateCS();\n    });\n  };\n\n  handleYRChange = event => {\n    this.setState({ yearstosave: event.target.value }, () => {\n      this.validateYR();\n    });\n  };\n\n  handleMOChange = event => {\n    this.setState({ monthstosave: event.target.value }, () => {\n      this.validateMO();\n    });\n  };\n\n  validateAM = () => {\n    const { amountneed } = this.state;\n    this.setState({\n      amError:\n        amountneed > 0 ? null : 'Invalid input'\n    });\n  }\n\n  validateCS = () => {\n    const { currentsave } = this.state;\n    this.setState({\n      csError:\n        currentsave > -1 ? null : 'Invalid input'\n    });\n  }\n\n  validateYR = () => {\n    const { yearstosave } = this.state;\n    this.setState({\n      yrError:\n        yearstosave > -1 ? null : 'Invalid input'\n    });\n  }\n\n  validateMO = () => {\n    const { monthstosave } = this.state;\n    this.setState({\n      moError:\n        monthstosave > -1 ? null : 'Invalid input'\n    });\n  }\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const { amountneed, currentsave, yearstosave, monthstosave } = this.state;\n\ttotalmonths = (Number(yearstosave*12) + Number(monthstosave));\n\ttotalcalc = ((Number(amountneed) - Number(currentsave)) / Number(totalmonths));\n    alert(`You need to save approximately $` + Math.ceil(totalcalc) + ` per month to reach your goal. \\nGood luck!`);\n  };\n  \n\n  render() {\n    return (\n      <MDBContainer>\n        <MDBCard>\n          <MDBCardBody>\n            <h3>Savings Estimator</h3>\n            <form onSubmit={this.handleSubmit}>\n              <div className=\"form-group\">\n                <label htmlFor=\"amountneed\">How much will you need?</label>\n                <input\n                  amountneed=\"amountneed\"\n                  className={`form-control ${\n                    this.state.amError ? \"is-invalid\" : \"\"\n                  }`}\n                  id=\"amountneed\"\n                  placeholder=\"1000\"\n                  type=\"number\"\n                  value={this.state.amountneed}\n                  onChange={this.handleAMChange}\n                  onBlur={this.validateAM}\n                />\n                <div className=\"invalid-feedback\">{this.state.amError}</div>\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"currentsave\">\n                  How much do you currently have saved?\n                </label>\n                <input\n                  currentsave=\"currentsave\"\n                  className={`form-control ${\n                    this.state.csError ? \"is-invalid\" : \"\"\n                  }`}\n                  id=\"currentsave\"\n                  placeholder=\"1000\"\n                  type=\"number\"\n                  value={this.state.currentsave}\n                  onChange={this.handleCSChange}\n                  onBlur={this.validateCS}\n                />\n                <div className=\"invalid-feedback\">{this.state.csError}</div>\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"yearstosave\">How many years?</label>\n                <input\n                  yearstosave=\"yearstosave\"\n                  className={`form-control ${\n                    this.state.yrError ? \"is-invalid\" : \"\"\n                  }`}\n                  id=\"yearstosave\"\n                  placeholder=\"0\"\n                  type=\"number\"\n                  value={this.state.yearstosave}\n                  onChange={this.handleYRChange}\n                  onBlur={this.validateYR}\n                />\n                <div className=\"invalid-feedback\">{this.state.yrError}</div>\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"monthstosave\">How many months?</label>\n                <input\n                  monthstosave=\"monthstosave\"\n                  className={`form-control ${\n                    this.state.moError ? \"is-invalid\" : \"\"\n                  }`}\n                  id=\"monthstosave\"\n                  placeholder=\"0\"\n                  type=\"number\"\n                  value={this.state.monthstosave}\n                  onChange={this.handleMOChange}\n                  onBlur={this.validateMO}\n                />\n                <div className=\"invalid-feedback\">{this.state.moError}</div>\n              </div>\n\n              <button type=\"submit\" className=\"btn btn-success btn-block\">\n                Submit\n              </button>\n            </form>\n          </MDBCardBody>\n        </MDBCard>\n      </MDBContainer>\n    );\n  }\n}\n\n\nexport default SpendingCalc;\n","import React, { Component } from \"react\";\nimport fire from \"./config/firebase\";\nimport Homepage from './homepage';\nimport Navbar from \"./Navbar\";\nimport {\n  MDBContainer,\n  MDBRow,\n  MDBCol,\n  MDBInput,\n  MDBBtn,\n  MDBCard,\n  MDBCardBody\n} from \"mdbreact\";\nimport { db } from \"./config/firebase\";\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      testing: \"\",\n    };\n    this.logout = this.logout.bind(this);\n    console.log(\"Got to homepage\");\n    // this.grabName = this.grabName.bind(this);\n  }\n\n  logout() {\n    fire.auth().signOut();\n  }\n\n  render() {\n    // this.setState.testing = fire.auth().currentUser.email;\n      // this.state.testing = \"dmfiaogpa\";\n      // console.log(this.grabName());\n      // this.state.testing = this.grabName();\n    return (\n\n      // {/* No header, and the drawer stays open on larger screens (fixed drawer). */}\n      <div>\n\n        {/* <Navbar /> */}\n        <MDBContainer>\n          <MDBCard>\n            <MDBCardBody>\n              {/* {this.grabName} */}\n              <h3>Welcome back to Piggy Bank!  { this.state.testing } </h3>\n              <Homepage />\n\t\t      {/* <MDBBtn onClick={this.logout}>Logout</MDBBtn> */}\n              {/* <button onClick={this.logout}>Logout</button> */}\n            </MDBCardBody>\n          </MDBCard>\n        </MDBContainer>\n        {/* <Home />  */}\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\n// import {\n//   BrowserRouter as Router,\n//   Route,\n//   Switch,\n//   Link,\n//   Redirect\n// } from \"react-router-dom\";\n// import {Link} from 'react-router-dom';\n// import { Link } from \"@material-ui/core\";\n// import { Layout, Drawer, Navigation, Content } from \"react-mdl\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  toolbar: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing(3),\n  },\n}));\n\nconst Navbar = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      {/* <Collapse timeout=\"auto\" unmountOnExit> */}\n        <Drawer\n          className={classes.drawer}\n          variant=\"permanent\"\n          classes={{\n            paper: classes.drawerPaper\n          }}\n          anchor=\"left\"\n        >\n          <div className={classes.toolbar} />\n          <AppBar position=\"fixed\" className={classes.appBar}>\n            <Toolbar>\n              <Typography variant=\"h6\" noWrap>\n                Piggy Bank\n              </Typography>\n            </Toolbar>\n          </AppBar>\n          {/* <List>\n          {['Home', 'Expenses', 'Visual Log', 'Ask Piggy', 'Logout'].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List> */}\n          <List>\n            <ListItem button component=\"a\" href=\"http://google.com\">\n              <ListItemText primary=\"Home\" />\n            </ListItem>\n            <ListItem button component=\"a\" href=\"http://google.com\">\n              <ListItemText primary=\"Expenses\" />\n            </ListItem>\n            <ListItem button component=\"a\" href=\"http://google.com\">\n              <ListItemText primary=\"Visual Log\" />\n            </ListItem>\n            <ListItem button component=\"a\" href=\"http://google.com\">\n              <ListItemText primary=\"Ask Piggy\" />\n            </ListItem>\n          </List>\n        </Drawer>\n        <Drawer />\n      {/* </Collapse> */}\n    </div>\n    // <div style={{ height: \"800px\", position: \"relative\" }}>\n    //       <Layout fixedDrawer>\n    //         <Drawer title=\"Title\">\n    //           <Navigation>\n    //             <a href=\"#\">Link</a>\n    //             <a href=\"#\">Link</a>\n    //             <a href=\"#\">Link</a>\n    //             <a href=\"#\">Link</a>\n    //           </Navigation>\n    //         </Drawer>\n    //         <Content />\n    //       </Layout>\n    //       </div>\n  );\n}\n\nexport default Navbar;\n","import React, { Component } from \"react\";\nimport {\n  MDBContainer,\n  MDBRow,\n  MDBCol,\n  MDBInput,\n  MDBBtn,\n  MDBCard,\n  MDBCardBody\n} from \"mdbreact\";\nimport { db } from \"./config/firebase\";\nimport fire from \"./config/firebase\";\n\nexport class Profile extends Component {\n         _isMounted = false;\n         constructor() {\n           super();\n           this.updateInfo = this.updateInfo.bind(this);\n           this.handleChange = this.handleChange.bind(this);\n           this.logout = this.logout.bind(this);\n           this.state = {\n             budget: \"\",\n             bio: \"\",\n             focus: \"\",\n             //  display_budget: \"\",\n             name: \"\"\n           };\n         }\n\n         logout() {\n             fire.auth().signOut();\n         }\n\n         handleChange(e) {\n           // console.log(e.target.value);\n           // console.log(e.target.name);\n                   if (this._isMounted) {\n\n           this.setState({ [e.target.name]: e.target.value });\n                   }\n                //    console.log(this.state.name);\n         }\n\n         componentDidMount() {\n           this._isMounted = true;\n\n           let currentComp = this;\n\n           fire.auth().onAuthStateChanged(function(user) {\n             if (user) {\n               var found = 0;\n               var userRef = db\n                 .collection(\"users\")\n                 .doc(fire.auth().currentUser.email);\n               var username = fire.auth().currentUser.email;\n               userRef.onSnapshot(\n                 {\n                   includeMetadataChanges: true\n                 },\n                 function(doc) {\n                   try {\n                            //    if (this._isMounted) {\n\n                     currentComp.setState({\n                       budget: doc.data().budget,\n                       bio: doc.data().bio,\n                       focus: doc.data().focus,\n                       name: doc.data().name\n                     });\n                    // }\n                   } catch (error) {\n                     console.log(\"We getting an error: \", error); // ADD back later\n                     found = 0;\n                   }\n                 }\n               );\n\n               if (found == 1) {\n                 //console.log(\"does hit this\")\n               } else {\n                 currentComp.setState({\n                   budget: [\"N/A\"]\n                 });\n               }\n             }\n           });\n         }\n\n         componentWillUnmount() {\n           this._isMounted = false;\n         }\n\n         updateInfo(e) {\n           //    e.preventDefault();\n           // console.log(\"passed signup\");\n           //    console.log(this.state.name);\n        //    console.log(\"YUH\");\n        var docRef = db.collection(\"users\").doc(fire.auth().currentUser.email);\n        docRef.update({\n            name: this.state.name,\n            bio: this.state.bio,\n            focus: this.state.focus,\n            budget: this.state.budget\n        })\n        //    fire\n        //      .firestore()\n        //      .doc(`/users/${this.state.email}`)\n        //      .update({\n        //        name: this.state.name,\n        //        budget: this.state.budget\n        //        //    wallet: 1000\n        //      })\n             .then(function() {\n               alert(\"Update successful.\");\n             })\n             .catch(function(error) {\n               alert(\"Error in updating the document.\");\n             });\n           //  alert(\"Information successfully updated.\");\n         }\n\n         render() {\n           return (\n             <div>\n               <MDBCardBody>\n                 <MDBCard>\n                   <MDBContainer>\n                     <h3>User Profile</h3>\n                     <form>\n                       <MDBInput\n                         value={this.state.name}\n                         onChange={this.handleChange}\n                         label=\"Your name\"\n                         icon=\"user\"\n                         group\n                         name=\"name\"\n                         type=\"text\"\n                         validate\n                         error=\"wrong\"\n                         success=\"right\"\n                       />\n                       <MDBInput\n                         value={fire.auth().currentUser.email}\n                         //  onChange={this.handleChange}\n                         label=\"Your email\"\n                         icon=\"envelope\"\n                         group\n                         name=\"email\"\n                         type=\"text\"\n                         //  validate\n                         error=\"wrong\"\n                         success=\"right\"\n                         disabled\n                       />\n                       <MDBInput\n                         value={this.state.budget}\n                         onChange={this.handleChange}\n                         label=\"Budget\"\n                         icon=\"envelope\"\n                         group\n                         name=\"budget\"\n                         type=\"number\"\n                         //  validate\n                         error=\"wrong\"\n                         success=\"right\"\n                         //  disabled\n                       />\n                       <MDBInput\n                         value={this.state.bio}\n                         onChange={this.handleChange}\n                         label=\"Bio\"\n                         icon=\"envelope\"\n                         group\n                         name=\"bio\"\n                         type=\"textarea\"\n                         //  validate\n                         error=\"wrong\"\n                         success=\"right\"\n                         //  disabled\n                       />\n                       <MDBInput\n                         value={this.state.focus}\n                         onChange={this.handleChange}\n                         label=\"What's your focus?\"\n                         icon=\"envelope\"\n                         group\n                         name=\"focus\"\n                         type=\"textarea\"\n                         //  validate\n                         error=\"wrong\"\n                         success=\"right\"\n                         //  disabled\n                       />\n                       <div className=\"text-center py-4 mt-3\">\n                         <MDBBtn\n                           color=\"primary\"\n                           type=\"button\"\n                           onClick={this.updateInfo}\n                         >\n                           Update Info\n                         </MDBBtn>\n                         <MDBBtn\n                           //    color=\"danger\"\n                           type=\"button\"\n                           onClick={this.logout}\n                         >\n                           Logout\n                         </MDBBtn>\n                         {/* <MDBBtn color=\"blue\" type=\"submit\" onClick=\"close\">\n                           Close\n                         </MDBBtn> */}\n                       </div>\n                     </form>\n                   </MDBContainer>\n                 </MDBCard>\n               </MDBCardBody>\n             </div>\n           );\n         }\n       }\n\nexport default Profile;\n","import React from \"react\";\n\nimport { Switch, Route } from \"react-router-dom\";\n\nimport Home from \"./Home\";\nimport Expenses from './Expenses';\nimport LineGraph from './LineGraph';\nimport Calculator from './Calculator';\nimport SpendingCalc from './SpendingCalc';\nimport Converter from './Converter';\nimport Profile from './Profile';\n// import ExpenseForm from './ExpenseForm';\n\n\nconst Main = () => (\n  <Switch>\n    <Route exact path=\"/\" component={Home} />\n    <Route path=\"/profile\" component={Profile}/>\n    {/* <Route path=\"/expenses\" component={Expenses} /> */}\n    <Route path=\"/currency\" component={Converter} />\n    <Route path=\"/linegraph\" component={LineGraph} />\n    <Route path=\"/calculator\" component={Calculator} />\n    <Route path=\"/spendingcalc\" component={SpendingCalc} />\n  </Switch>\n);\n\nexport default Main;\n","import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {\n  MDBContainer,\n  MDBRow,\n  MDBCol,\n  MDBInput,\n  MDBBtn,\n  MDBCard,\n  MDBModalBody,\n  MDBCardBody\n} from \"mdbreact\";\nimport { Link } from \"react-router-dom\";\nimport fire from \"./config/firebase\";\n\nclass SignUp extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.signup = this.signup.bind(this);\n    this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\"\n    };\n  }\n\n  handleChange(e) {\n    // console.log(e.target.value);\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  signup(e) {\n    e.preventDefault();\n    // console.log(\"passed signup\");\n    fire\n      .auth()\n      .createUserWithEmailAndPassword(this.state.email, this.state.password)\n      .then(u => {})\n      .then(u => {\n        console.log(u);\n      })\n      .catch(error => {\n        console.log(error);\n        alert(error);\n      });\n    fire\n      .firestore()\n      .doc(`/users/${this.state.email}`)\n      .set({\n        name: this.state.name,\n        password: this.state.password\n        // wallet: 1000\n      });\n  }\n\n  render() {\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          height: \"3vh\",\n          width: \"1000px\"\n        }}\n      >\n        <MDBModalBody>\n          <MDBContainer>\n            <MDBRow>\n              <MDBCol md=\"6\">\n                <MDBCard>\n                  <MDBCardBody>\n                    <form>\n                      <p className=\"h4 text-center py-4\">Sign up</p>\n                      <div className=\"grey-text\">\n                        <MDBInput\n                          value={this.state.name}\n                          onChange={this.handleChange}\n                          label=\"Your name\"\n                          icon=\"user\"\n                          group\n                          name=\"name\"\n                          type=\"text\"\n                          validate\n                          error=\"wrong\"\n                          success=\"right\"\n                        />\n                        <MDBInput\n                          value={this.state.email}\n                          onChange={this.handleChange}\n                          label=\"Your email\"\n                          icon=\"envelope\"\n                          group\n                          name=\"email\"\n                          type=\"email\"\n                          validate\n                          error=\"wrong\"\n                          success=\"right\"\n                        />\n                        {/* <MDBInput\n                          label=\"Confirm your email\"\n                          icon=\"exclamation-triangle\"\n                          group\n                          type=\"text\"\n                          validate\n                          error=\"wrong\"\n                          success=\"right\"\n                        /> */}\n                        <MDBInput\n                          value={this.state.password}\n                          onChange={this.handleChange}\n                          label=\"Your password\"\n                          icon=\"lock\"\n                          group\n                          name=\"password\"\n                          type=\"password\"\n                          validate\n                        />\n                      </div>\n                      <div className=\"text-center py-4 mt-3\">\n                        <MDBBtn\n                          color=\"orange\"\n                          type=\"submit\"\n                          onClick={this.signup}\n                        >\n                          Register\n                        </MDBBtn>\n                        <MDBBtn color=\"blue\" type=\"submit\" onClick=\"close\">\n                          Close\n                        </MDBBtn>\n                      </div>\n                    </form>\n                  </MDBCardBody>\n                </MDBCard>\n              </MDBCol>\n            </MDBRow>\n          </MDBContainer>\n        </MDBModalBody>\n      </div>\n    );\n  }\n}\n\nexport default SignUp;\n","import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Link } from \"react-router-dom\";\nimport fire from \"./config/firebase\";\nimport SignUp from \"./Signup\";\nimport {\n  MDBContainer,\n  MDBRow,\n  MDBCol,\n  MDBInput,\n  MDBBtn,\n  MDBCard,\n  MDBCardBody\n} from \"mdbreact\";\nimport Recaptcha from \"react-recaptcha\";\n\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.login = this.login.bind(this);\n    this.recaptchaLoaded = this.recaptchaLoaded.bind(this);\n    this.verifyCallback = this.verifyCallback.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.signup = this.signup.bind(this);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      showsignup: false,\n      isVerified: false\n    };\n  }\n\n  recaptchaLoaded() {\n    console.log(\"captcha loaded lul\");\n  }\n\n  verifyCallback(response) {\n    if (response) {\n      this.setState({\n        isVerified: true\n      });\n    }\n  }\n\n  handleChange(e) {\n    // console.log(e.target.value);\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  login(e) {\n    if (this.state.isVerified == true) {\n      e.preventDefault();\n      console.log(this.state.email);\n      fire\n        .auth()\n        .signInWithEmailAndPassword(this.state.email, this.state.password)\n        .then(u => {})\n        .catch(error => {\n          alert(error);\n        });\n    } else {\n      alert(\"Please complete human verification.\");\n    }\n  }\n\n  signup(e) {\n    if (this.state.isVerified == true) {\n    this.setState({\n      showsignup: true\n    });\n  } else {\n    alert(\"Please complete human verification.\");\n  }\n    /*\n    e.preventDefault();\n    fire\n      .auth()\n      .createUserWithEmailAndPassword(this.state.email, this.state.password)\n      .then(u => {})\n      .then(u => {\n        console.log(u);\n      })\n      .catch(error => {\n        console.log(error);\n      });*/\n  }\n\n  render() {\n    return (\n      <MDBContainer>\n        {/* <MDBRow> */}\n        {/* <MDBCol md=\"12\"> */}\n        <MDBCard style={{ width: \"80rem\", height: \"25rem\", padding: \"50px\" }}>\n          <form>\n            <p className=\"h5 text-center mb-4\">Sign in</p>\n            <div className=\"grey-text\">\n              <MDBInput\n                value={this.state.email}\n                onChange={this.handleChange}\n                label=\"Type your email\"\n                icon=\"envelope\"\n                group\n                name=\"email\"\n                type=\"email\"\n                validate\n                error=\"wrong\"\n                success=\"right\"\n              />\n              <MDBInput\n                value={this.state.password}\n                onChange={this.handleChange}\n                label=\"Type your password\"\n                icon=\"lock\"\n                group\n                name=\"password\"\n                type=\"password\"\n                validate\n              />\n            </div>\n            <div className=\"d-inline\">\n              <MDBBtn type=\"submit\" onClick={this.login}>\n                Login\n              </MDBBtn>\n            </div>\n            <div className=\"d-inline\">\n              <MDBBtn color=\"indigo\" onClick={this.signup}>\n                SignUp\n              </MDBBtn>\n              {this.state.showsignup ? <SignUp /> : null}\n            </div>\n          </form>\n        </MDBCard>\n        <Recaptcha\n          sitekey=\"6LdiycUUAAAAAO3vnWuzvNupDAi27ml9ywGkUCTl\"\n          render=\"explicit\"\n          // verifyCallback={verifyCallback}\n          onloadCallback={this.recaptchaLoaded}\n          verifyCallback={this.verifyCallback}\n        />\n        {/* </MDBCol> */}\n        {/* </MDBRow> */}\n      </MDBContainer>\n    );\n  }\n}\nexport default Login;\n","import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./App.css\";\nimport fire from \"./config/firebase\";\nimport Home from \"./Home\";\nimport Main from \"./Main\";\nimport Login from \"./Login\";\nimport Navbar from \"./Navbar\";\nimport SignUp from \"./Signup\";\n// import homepage from \"./homepage\";\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport { Avatar, Layout, Header, Navigation, Drawer, Content, Footer, FooterSection, FooterLinkList } from \"react-mdl\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Link,\n  Redirect\n} from \"react-router-dom\";\nimport 'mdbreact/dist/css/mdb.css';\nimport {db} from './config/firebase';\nimport Chevron from \"./Chevron\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      user: null,\n      name: \"\"\n    };\n    this.authListener = this.authListener.bind(this);\n  }\n\n  componentDidMount() {\n    this.authListener();\n    let currentComp = this;\n\n    fire.auth().onAuthStateChanged(function(user) {\n      if (user) {\n        var found = 0;\n        var userRef = db.collection(\"users\").doc(fire.auth().currentUser.email);\n        var username = fire.auth().currentUser.email;\n        userRef.onSnapshot(\n          {\n            includeMetadataChanges: true\n          },\n          function(doc) {\n            try {\n              //    if (this._isMounted) {\n\n              currentComp.setState({\n                // budget: doc.data().budget,\n                name: doc.data().name\n              });\n              // }\n            } catch (error) {\n              console.log(\"We getting an error: \", error); // ADD back later\n              found = 0;\n            }\n          }\n        );\n\n        if (found == 1) {\n          //console.log(\"does hit this\")\n        } else {\n          currentComp.setState({\n            name: [\"N/A\"]\n          });\n        }\n      }\n    });\n  }\n\n  authListener() {\n    fire.auth().onAuthStateChanged(user => {\n      // console.log(user);\n      if (user) {\n        this.setState({ user });\n        localStorage.setItem(\"user\", user.uid);\n      } else {\n        this.setState({ user: null });\n        localStorage.removeItem(\"user\");\n      }\n    });\n  }\n\n  render() {\n            // console.log(\"hi\");\n            console.log(this.state.user);\n    return (\n      <div id=\"root\">\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            height: \"100vh\"\n          }}\n        >\n          <Layout fixedHeader>\n            <Header\n              title={\n                <span>\n                  <span style={{ color: \"#ddd\" }}>Piggy Bank </span>\n                  {/* <strong>2020</strong> */}\n                </span>\n              }\n            >\n              <Navigation>\n                {/* <Avatar>OP</Avatar> */}\n            {this.state.user ? <Link to=\"/profile\">{this.state.name} </Link> : <div></div>}\n              </Navigation>\n            </Header>\n            <Drawer>\n              <Navigation>\n                {/* yuh */}\n                <Link to=\"/\">Home</Link>\n                {/* <Link to=\"/expenses\">Expenses</Link> */}\n                <Link to=\"/linegraph\">Statistics</Link>\n                <Link to=\"/spendingcalc\">Savings Estimator</Link>\n                <Link to=\"/calculator\">Calculator</Link>\n                <Link to=\"/currency\">Live Exchange Rates</Link>\n              </Navigation>\n            </Drawer>\n            <Content>\n              <div className=\"page-content\" />\n              <div className=\"App\">\n                {this.state.user ? <Main /> : <Login />}\n              </div>\n            </Content>\n            <Footer class=\"page-footer font-small blue \">\n              <FooterSection\n                type=\"middle\"\n                logo=\"© 2019-2020 Team 0: https://github.com/jaeeee/Piggy-Bank\"\n              ></FooterSection>\n            </Footer>\n          </Layout>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"react-mdl/extra/material.css\";\nimport \"react-mdl/extra/material.js\";\nimport {BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root') || document.createElement('div')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}